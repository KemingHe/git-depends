Question,Option A,Option B,Option C,Option D,Correct Answer,Comment A,Comment B,Comment C,Comment D
"Write the SQL to select all columns from a table named 'Customers'.","SELECT Customers *;","SELECT * FROM Customers;","GET * FROM Customers;","SELECT ALL FROM Customers;","B","Incorrect syntax. '*' needs to be after SELECT and FROM is needed.","Correct. 'SELECT *' selects all columns, 'FROM Customers' specifies the table.","Incorrect. 'GET' is not a standard SQL keyword for selection.","Incorrect. 'ALL' is not used this way; '*' selects all columns. Standard SQL doesn't use 'SELECT ALL' for columns."
"Write the SQL to select only the 'Name' and 'City' columns from the 'Customers' table.","SELECT Name, City FROM Customers;","SELECT * FROM Customers WHERE Columns = 'Name', 'City';","SELECT (Name, City) FROM Customers;","FETCH Name, City FROM Customers;","A","Correct. Specifies the desired columns directly after SELECT.","Incorrect. WHERE clause is for filtering rows, not selecting columns.","Incorrect syntax. Columns are listed comma-separated, not in parentheses like this.","Incorrect. 'FETCH' is sometimes used with cursors or for limiting rows (like LIMIT/OFFSET), not for basic column selection."
"Write the SQL to select all customers from the 'Customers' table who live in 'London'.","SELECT * FROM Customers WHERE City = London;","SELECT * FROM Customers HAVING City = 'London';","SELECT * FROM Customers WHERE City == 'London';","SELECT * FROM Customers WHERE City = 'London';","D","Incorrect. String literals in SQL must be enclosed in single quotes (e.g., 'London').","Incorrect. HAVING filters groups after aggregation; WHERE filters individual rows before aggregation.","Incorrect. The standard SQL equality operator is '=', not '=='.","Correct. Uses the WHERE clause with the correct equality operator and string literal quoting."
"Given table Orders(OrderID, CustomerID, OrderDate), write the SQL to count the total number of orders.","SELECT COUNT(Orders);","SELECT SUM(*) FROM Orders;","SELECT COUNT(*) FROM Orders;","SELECT NUMBER(*) FROM Orders;","C","Incorrect syntax. COUNT() operates on columns or '*'.","Incorrect. SUM() adds values in a column; it doesn't count rows.","Correct. COUNT(*) is the standard way to count all rows in a table or result set.","Incorrect. 'NUMBER' is not a standard SQL aggregate function for counting."
"Write the SQL to select customers from 'Customers' whose 'Name' starts with the letter 'A'.","SELECT * FROM Customers WHERE Name LIKE 'A%';","SELECT * FROM Customers WHERE Name STARTS WITH 'A';","SELECT * FROM Customers WHERE Name = 'A*';","SELECT * FROM Customers WHERE Name LIKE 'A';","A","Correct. The LIKE operator with '%' wildcard matches any sequence of characters. 'A%' means 'starts with A'.","Incorrect. 'STARTS WITH' is not a standard SQL operator.","Incorrect. This would match only names that are literally 'A*'.","Incorrect. This would only match names that are exactly 'A'. The wildcard is missing."
"Given table Products(ProductID, Name, Price), write the SQL to find the average price of all products.","SELECT MEDIAN(Price) FROM Products;","SELECT AVG(Price) FROM Products;","SELECT MEAN(Price) FROM Products;","SELECT TOTAL(Price) / COUNT(*) FROM Products;","B","Incorrect. MEDIAN is not a standard SQL aggregate function in most dialects.","Correct. AVG() is the standard SQL function for calculating the average of a numeric column.","Incorrect. 'MEAN' is a statistical term, but AVG() is the SQL function.","Incorrect logic. While mathematically related, this is not the standard direct function. TOTAL() isn't standard SQL. You'd use SUM(Price)."
"Write the SQL to select all orders from 'Orders' placed on or after '2025-01-01'. Assume OrderDate is a DATE type.","SELECT * FROM Orders WHERE OrderDate >= '2025-01-01';","SELECT * FROM Orders WHERE OrderDate > '2024-12-31';","SELECT * FROM Orders WHERE OrderDate LATER THAN '2025-01-01';","SELECT * FROM Orders WHERE OrderDate BETWEEN '2025-01-01' AND MAX(OrderDate);","A","Correct. Uses the '>=' operator for 'on or after' comparison with the date literal correctly quoted.","Correct Logically, but option A is more direct for 'on or after'. Both A & B work assuming dates are comparable this way. Let's prefer the direct '>='.","Incorrect. 'LATER THAN' is not standard SQL syntax.","Incorrect. BETWEEN is inclusive, but using MAX(OrderDate) like this in a WHERE clause is not standard or efficient. The '>=' comparison is direct."
"Write the SQL to select product names and prices from 'Products', sorted by price in descending order.","SELECT Name, Price FROM Products SORT BY Price DESC;","SELECT Name, Price FROM Products ORDER BY Price DOWN;","SELECT Name, Price FROM Products ORDER BY Price DESC;","SELECT Name, Price FROM Products GROUP BY Price DESC;","C","Incorrect. The keyword is ORDER BY, not SORT BY.","Incorrect. The keyword for descending order is DESC, not DOWN.","Correct. Uses ORDER BY to sort and DESC for descending order.","Incorrect. GROUP BY is for aggregation, not sorting result rows."
"Given Employees(ID, Name, Salary, DeptID) and Departments(DeptID, DeptName). Write SQL to list employee names and their department names.","SELECT E.Name, D.DeptName FROM Employees E JOIN Departments D;","SELECT Name, DeptName FROM Employees INNER JOIN Departments;","SELECT E.Name, D.DeptName FROM Employees E INNER JOIN Departments D ON E.DeptID = D.DeptID;","SELECT E.Name, D.DeptName FROM Employees E, Departments D WHERE E.DeptID = D.DeptID;","C","Incorrect. Missing the required ON clause to specify the join condition.","Incorrect. Also missing the required ON clause. Table aliases might be needed if column names were ambiguous.","Correct. Uses INNER JOIN with the proper ON clause matching DeptID in both tables. Aliases (E, D) improve readability.","Correct (Implicit Join Syntax). This older comma-separated join syntax works but INNER JOIN syntax (Option C) is generally preferred for clarity."
"Write the SQL to find the highest salary from the 'Employees' table.","SELECT TOP 1 Salary FROM Employees ORDER BY Salary DESC;","SELECT MAX(Salary) FROM Employees;","SELECT Salary FROM Employees HAVING Salary = MAX(Salary);","SELECT HIGHEST(Salary) FROM Employees;","B","Correct (Syntax Varies). This works in SQL Server and MS Access. `LIMIT 1` is used in MySQL/PostgreSQL. However, MAX() is more standard and direct.","Correct. MAX() is the standard SQL aggregate function to find the maximum value in a column.","Incorrect. Aggregate functions like MAX() cannot typically be used directly in a HAVING clause without a GROUP BY, and WHERE would be more appropriate here if not using MAX() directly.","Incorrect. 'HIGHEST' is not a standard SQL function."
"Write the SQL to change the salary of employee with ID 5 to 60000 in the 'Employees' table.","CHANGE Employees SET Salary = 60000 WHERE ID = 5;","UPDATE Employees SET Salary = 60000 WHERE ID = 5;","SET Salary = 60000 FOR Employees WHERE ID = 5;","MODIFY Employees SET Salary = 60000 IF ID = 5;","B","Incorrect. The keyword is UPDATE, not CHANGE.","Correct. Uses the standard UPDATE statement syntax.","Incorrect syntax.","Incorrect. The keyword is UPDATE, and the condition uses WHERE, not IF."
"Write the SQL to add a new employee ('John Doe', Salary 55000, DeptID 10) into the 'Employees' table (assume ID is auto-generated or not specified).","ADD INTO Employees (Name, Salary, DeptID) VALUES ('John Doe', 55000, 10);","INSERT INTO Employees (Name, Salary, DeptID) VALUES ('John Doe', 55000, 10);","CREATE Employees (Name, Salary, DeptID) VALUES ('John Doe', 55000, 10);","PUT INTO Employees (Name, Salary, DeptID) VALUES ('John Doe', 55000, 10);","B","Incorrect. The keyword is INSERT INTO, not ADD INTO.","Correct. Uses the standard INSERT INTO statement syntax.","Incorrect. CREATE is used for defining tables/databases, not adding data rows.","Incorrect. 'PUT INTO' is not standard SQL syntax."
"Write the SQL to delete all employees from the 'Employees' table who work in DeptID 20.","REMOVE FROM Employees WHERE DeptID = 20;","DELETE Employees WHERE DeptID = 20;","DROP FROM Employees WHERE DeptID = 20;","DELETE FROM Employees WHERE DeptID = 20;","D","Incorrect. The keyword is DELETE, not REMOVE.","Incorrect syntax. Missing the 'FROM' keyword between DELETE and the table name.","Incorrect. DROP is used to remove database objects (tables, databases), not rows.","Correct. Uses the standard DELETE FROM statement syntax."
"Given table Products(ProductID, Name, Price), what is the result of: SELECT COUNT(DISTINCT Price) FROM Products; (Assume Prices are 10, 20, 10, 30)","4","2","3","Error","C","Incorrect. This is the total number of rows.","Incorrect. This doesn't account for the price '30'.","Correct. COUNT(DISTINCT Price) counts the number of unique price values (10, 20, 30).","Incorrect. The query is valid SQL."
"Given table Employees(ID, Name, Salary), what is the result of: SELECT * FROM Employees ORDER BY Salary DESC LIMIT 1; (Assume data: (1,'A',50k), (2,'B',60k), (3,'C',55k)). Assume LIMIT is supported.","(2,'B',60k)","(1,'A',50k)","(3,'C',55k)","Error","A","Correct. The query sorts by salary descending (60k, 55k, 50k) and LIMIT 1 selects the top row.","Incorrect. This is the lowest salary.","Incorrect. This is the middle salary.","Incorrect. The query is valid assuming LIMIT syntax."
"Write the SQL to find all departments (DeptID) from 'Employees' that have more than 10 employees.","SELECT DeptID FROM Employees WHERE COUNT(*) > 10 GROUP BY DeptID;","SELECT DeptID FROM Employees GROUP BY DeptID HAVING COUNT(*) > 10;","SELECT DeptID FROM Employees HAVING COUNT(*) > 10;","SELECT DeptID, COUNT(*) FROM Employees WHERE COUNT(*) > 10;","B","Incorrect. WHERE filters before grouping; aggregate conditions belong in HAVING.","Correct. Groups by DeptID, then uses HAVING to filter groups where the count is greater than 10.","Incorrect. HAVING requires a GROUP BY clause when used with aggregate functions like COUNT(*).","Incorrect. Cannot use COUNT(*) in the WHERE clause."
"Given Employees(ID, Name, Salary, DeptID) and Departments(DeptID, DeptName). Write SQL to list all employees, and if they have a matching department, show the department name. If not, show NULL for department name.","SELECT E.Name, D.DeptName FROM Employees E INNER JOIN Departments D ON E.DeptID = D.DeptID;","SELECT E.Name, D.DeptName FROM Employees E LEFT JOIN Departments D ON E.DeptID = D.DeptID;","SELECT E.Name, D.DeptName FROM Employees E RIGHT JOIN Departments D ON E.DeptID = D.DeptID;","SELECT E.Name, D.DeptName FROM Employees E FULL OUTER JOIN Departments D ON E.DeptID = D.DeptID;","B","Incorrect. INNER JOIN only includes employees with a matching department.","Correct. LEFT JOIN includes all rows from the left table (Employees) and matching rows (or NULLs) from the right table (Departments).","Incorrect. RIGHT JOIN would include all departments and only matching employees.","Incorrect. FULL OUTER JOIN includes all rows from both tables, potentially showing departments with no employees as well."
"Write the SQL to find the second highest salary from the 'Employees' table. (Assume simple methods, ignore ties for simplicity in options)","SELECT MAX(Salary) FROM Employees WHERE Salary < MAX(Salary);","SELECT Salary FROM Employees ORDER BY Salary DESC LIMIT 1 OFFSET 1;","SELECT MAX(Salary) FROM Employees WHERE Salary NOT IN (SELECT MAX(Salary) FROM Employees);","SELECT MIN(Salary) FROM (SELECT Salary FROM Employees ORDER BY Salary DESC LIMIT 2);","B","Incorrect. Cannot directly use MAX() in WHERE like this in standard SQL.","Correct (Syntax Varies). Sorts salaries descending, skips the first one (OFFSET 1), and takes the next one (LIMIT 1). This is common syntax in PostgreSQL/MySQL. Option C is more standard SQL but complex. Option D also works but uses nested LIMIT.","Correct (Standard SQL approach). Finds the maximum salary among those that are not the absolute maximum salary.","Correct (Alternative using subquery and MIN). Selects top 2 salaries descending, then finds the minimum of those two, which is the second highest."
"Given table Scores(StudentID, Score). Data: (101, 85), (102, 90), (101, 95). What's the result of: SELECT StudentID, MAX(Score) FROM Scores GROUP BY StudentID;","(101, 95), (102, 90)","(101, 85)","(102, 90)","Error","A","Correct. It groups by StudentID and finds the MAX(Score) within each group. Student 101's max score is 95, Student 102's max score is 90.","Incorrect. This ignores the higher score for student 101.","Incorrect. This misses student 101.","Incorrect. The query is valid."
"Write the SQL to select employee names that contain the substring 'an'.","SELECT Name FROM Employees WHERE Name CONTAINS 'an';","SELECT Name FROM Employees WHERE Name LIKE '%an%';","SELECT Name FROM Employees WHERE FIND('an', Name) > 0;","SELECT Name FROM Employees WHERE Name = '%an%';","B","Incorrect. 'CONTAINS' is not standard SQL for substring matching (though some systems have full-text search features).","Correct. LIKE with '%' wildcards on both sides matches the substring anywhere within the string.","Incorrect. FIND() or similar functions exist in some dialects but syntax varies, and LIKE is more standard.","Incorrect. This would match names that are literally '%an%'. Wildcards only work with LIKE."
"Given table Items(ItemID, Category, Price). Data: (1, 'A', 10), (2, 'B', 20), (3, 'A', 15). What is the result of: SELECT Category, SUM(Price) FROM Items GROUP BY Category;","('A', 10), ('B', 20), ('A', 15)","('A', 25), ('B', 20)","('A', 10)","Error","B","Incorrect. This lists original rows, not the grouped sum.","Correct. It groups by Category and calculates the SUM(Price) for each category ('A': 10+15=25, 'B': 20).","Incorrect. This misses category B and the second item in category A.","Incorrect. The query is valid."
"Write the SQL query to combine the results of two SELECT statements, returning only unique rows. (Assume compatibility)","SELECT ... UNION ALL SELECT ...;","SELECT ... JOIN SELECT ...;","SELECT ... UNION SELECT ...;","SELECT ... MERGE SELECT ...;","C","Incorrect. UNION ALL includes duplicate rows.","Incorrect. JOIN combines tables based on related columns, not concatenates result sets.","Correct. UNION combines the results of two SELECT statements and removes duplicate rows.","Incorrect. MERGE (or UPSERT) is typically used for inserting/updating data based on a source, not combining SELECT results like UNION."
"Given table Events(EventID, EventName, City). Write SQL to find cities that have more than one event listed.","SELECT City FROM Events WHERE COUNT(City) > 1;","SELECT City, COUNT(*) FROM Events GROUP BY City HAVING COUNT(*) > 1;","SELECT City FROM Events GROUP BY City HAVING COUNT(*) > 1;","SELECT DISTINCT City FROM Events WHERE COUNT(*) > 1;","C","Incorrect. Cannot use COUNT in WHERE clause.","Correct (but includes count). This works but the question asks only for the cities.","Correct. This selects only the City name for those cities meeting the HAVING condition.","Incorrect. WHERE clause cannot contain aggregate function like COUNT(*)."
"What does the `AS` keyword typically do in a SELECT statement?","Filters rows based on a condition.","Specifies the table to select from.","Creates an alias (temporary name) for a column or table.","Sorts the result set.","C","Incorrect. That is the WHERE clause.","Incorrect. That is the FROM clause.","Correct. `SELECT column_name AS alias_name FROM table;` or `SELECT * FROM table_name AS alias_name;`","Incorrect. That is the ORDER BY clause."
"Write the SQL to select the current date and time from the database system. (Syntax may vary slightly)","SELECT CURRENT_TIMESTAMP;","SELECT NOW();","SELECT GETDATE();","All of the above (depending on the specific SQL dialect)","D","Correct (SQL Standard). CURRENT_TIMESTAMP is the standard SQL function.","Correct (Common). NOW() is a common function in systems like MySQL and PostgreSQL.","Correct (Common). GETDATE() is common in SQL Server.","Correct. Different database systems often have their own function names for this, although CURRENT_TIMESTAMP is the most standard."
"Given table Sales(SaleID, Product, Amount). What does this query do: SELECT Product, Amount FROM Sales ORDER BY Amount DESC;?","Finds the product with the highest amount.","Lists all products and their amounts, sorted from highest amount to lowest.","Lists all products and their amounts, sorted from lowest amount to highest.","Groups sales by product.","B","Incorrect. It lists all sales, not just the single highest one (unless LIMIT 1 was added).","Correct. It selects Product and Amount, and ORDER BY Amount DESC sorts the entire result set accordingly.","Incorrect. DESC means descending (high to low). ASC or default would be low to high.","Incorrect. ORDER BY sorts, GROUP BY aggregates."
"Write SQL to find employees whose salary is between 50000 and 70000 (inclusive).","SELECT * FROM Employees WHERE Salary >= 50000 AND Salary <= 70000;","SELECT * FROM Employees WHERE Salary BETWEEN 50000 AND 70000;","SELECT * FROM Employees WHERE Salary > 49999 AND Salary < 70001;","Both A and B","D","Correct. Uses standard comparison operators AND logical AND.","Correct. Uses the BETWEEN operator, which is inclusive by default in SQL.","Correct (Logically). Achieves the same result for integer/numeric salaries, but BETWEEN or >=/<= are more direct.","Correct. Both Option A and Option B are standard and correct ways to achieve this."
"Given table Actions(UserID, ActionType, Timestamp). What is the result of: SELECT COUNT(ActionType) FROM Actions; (Assume 5 rows exist)?","5","The number of non-NULL ActionType values.","The number of unique ActionType values.","Error","B","Incorrect. COUNT(*) counts all rows. COUNT(column) counts non-NULL values in that specific column.","Correct. COUNT(column_name) specifically counts the number of rows where 'column_name' is not NULL.","Incorrect. That would be COUNT(DISTINCT ActionType).","Incorrect. The query is valid."
"Write the SQL to create a new table named 'Students' with columns 'StudentID' (integer, primary key) and 'Name' (variable character string up to 50 characters).","NEW TABLE Students (StudentID INT PRIMARY KEY, Name VARCHAR(50));","CREATE TABLE Students (StudentID INT PRIMARY KEY, Name VARCHAR(50));","MAKE TABLE Students (StudentID INTEGER PRIMARY, Name STRING(50));","DEFINE TABLE Students (StudentID INT KEY, Name CHAR(50));","B","Incorrect. 'NEW TABLE' is not standard SQL DDL.","Correct. Uses the standard CREATE TABLE syntax with common data types INT and VARCHAR, and PRIMARY KEY constraint.","Incorrect. 'MAKE TABLE' and 'STRING(50)' and 'INTEGER PRIMARY' are not standard SQL.","Incorrect. 'DEFINE TABLE' and 'INT KEY' are not standard SQL. VARCHAR is generally preferred over CHAR for variable-length strings."
"Given table Log(LogID, Message, Level). Data: (1,'Info','DEBUG'), (2,'Error','ERROR'), (3,'Warn','WARN'), (4,'Info','DEBUG'). What is the result of: SELECT Level FROM Log UNION SELECT Level FROM Log;?","('DEBUG'), ('ERROR'), ('WARN'), ('DEBUG')","('DEBUG'), ('ERROR'), ('WARN')","Error","('DEBUG'), ('DEBUG'), ('ERROR'), ('WARN')","B","Incorrect. This is the result before UNION removes duplicates.","Correct. UNION combines the results and removes duplicates, so 'DEBUG' appears only once.","Incorrect. The query is valid.","Incorrect. This would be the result of UNION ALL."
"Write SQL to find employees whose name is exactly 'Peter Jones'.","SELECT * FROM Employees WHERE Name LIKE 'Peter Jones';","SELECT * FROM Employees WHERE Name = 'Peter Jones';","SELECT * FROM Employees WHERE Name IS 'Peter Jones';","SELECT * FROM Employees WHERE Name CONTAINS 'Peter Jones';","B","Incorrect. LIKE without wildcards acts like '=', but '=' is more direct for exact matches.","Correct. The '=' operator performs an exact match comparison for strings.","Incorrect. 'IS' is typically used with NULL (e.g., WHERE Name IS NULL).","Incorrect. 'CONTAINS' is not standard SQL for exact matching."
"Given table Inventory(ItemID, Quantity). Data: (10, 5), (20, 0), (30, NULL). What is the result of: SELECT COUNT(Quantity) FROM Inventory;?","3","2","1","Error","B","Incorrect. COUNT(column) excludes NULL values.","Correct. It counts the rows where Quantity is NOT NULL (values 5 and 0). The row with NULL is excluded.","Incorrect. It counts both 5 and 0.","Incorrect. The query is valid."
"Given table Inventory(ItemID, Quantity). Data: (10, 5), (20, 0), (30, NULL). What is the result of: SELECT COUNT(*) FROM Inventory;?","3","2","1","Error","A","Correct. COUNT(*) counts all rows, regardless of NULL values in specific columns. There are 3 rows in total.","Incorrect. This would be the result of COUNT(Quantity).","Incorrect.","Incorrect. The query is valid."
"Write SQL to find the names of employees whose Salary is NULL.","SELECT Name FROM Employees WHERE Salary = NULL;","SELECT Name FROM Employees WHERE Salary IS NULL;","SELECT Name FROM Employees WHERE Salary != NULL;","SELECT Name FROM Employees WHERE Salary NULL;","B","Incorrect. Standard SQL requires using 'IS NULL' or 'IS NOT NULL' to check for NULL values, not comparison operators like '=' or '!='.","Correct. 'IS NULL' is the standard SQL predicate to check if a value is NULL.","Incorrect. This would find employees whose salary is NOT NULL.","Incorrect syntax."
"Given table Projects(ProjectID, StartDate, EndDate). What does this query do: SELECT ProjectID, EndDate - StartDate FROM Projects;? (Assume date subtraction is supported and yields duration)","Lists Project IDs and their start dates.","Lists Project IDs and their end dates.","Calculates the duration of each project (syntax/result type varies by DBMS).","Finds projects that have not ended yet.","C","Incorrect. It selects ProjectID but also calculates duration.","Incorrect. It selects ProjectID but also calculates duration.","Correct. Subtracting dates typically yields an interval or number of days representing the duration, though the exact function/syntax can vary (e.g., DATEDIFF in some systems).","Incorrect. It calculates duration for all projects, not just ongoing ones."
"Write SQL to select all unique Department IDs from the 'Employees' table.","SELECT UNIQUE DeptID FROM Employees;","SELECT DeptID FROM Employees;","SELECT DISTINCT DeptID FROM Employees;","SELECT DeptID FROM Employees GROUP BY DeptID;","C","Incorrect. The keyword is DISTINCT, not UNIQUE (though UNIQUE can be a constraint).","Incorrect. This would select all DeptID values, including duplicates.","Correct. The DISTINCT keyword eliminates duplicate rows from the result set.","Correct (Alternative). Grouping by DeptID and selecting it effectively produces the unique DeptIDs, but DISTINCT is more direct for this purpose."
"Given table Temps(City, Reading). Data: ('A', 70), ('B', 80), ('A', 72). Result of: SELECT AVG(Reading) FROM Temps WHERE City = 'A';?","70","71","72","Error","B","Incorrect. This is only the first reading for City 'A'.","Correct. The average of readings for City 'A' (70 and 72) is (70+72)/2 = 71.","Incorrect. This is only the second reading for City 'A'.","Incorrect. The query is valid."
"Write SQL to find employees whose salary is *not* 50000.","SELECT * FROM Employees WHERE Salary != 50000;","SELECT * FROM Employees WHERE Salary <> 50000;","SELECT * FROM Employees WHERE NOT Salary = 50000;","All of the above","D","Correct. '!=' is a common 'not equal' operator.","Correct. '<>' is the standard SQL 'not equal' operator.","Correct. Using the NOT logical operator with the equality condition also works.","Correct. All three options are valid ways to express 'not equal' in most SQL dialects (though <> is the most standard)."
"What is the primary purpose of the SQL `CASE` statement?","To terminate a loop.","To perform conditional logic within a query (like if/then/else).","To define a cursor.","To create a new table.","B","Incorrect. CASE is not for loop control.","Correct. `CASE WHEN condition THEN result [WHEN...] ELSE result END` allows returning different values based on conditions within a SELECT, WHERE, or ORDER BY clause.","Incorrect. Cursors are typically declared using DECLARE CURSOR.","Incorrect. CREATE TABLE is used for that."
"Given table Grades(Student, Subject, Grade). Data: ('Al', 'Math', 'A'), ('Bo', 'Math', 'B'), ('Al', 'Sci', 'B'). Result of: SELECT Student, COUNT(Subject) FROM Grades GROUP BY Student;?","('Al', 'A'), ('Bo', 'B'), ('Al', 'B')","('Al', 2), ('Bo', 1)","('Al', 'Math'), ('Bo', 'Math'), ('Al', 'Sci')","Error","B","Incorrect. This shows original grades, not counts per student.","Correct. It groups by Student and counts the number of subjects (rows) for each student. Al has 2 subjects, Bo has 1.","Incorrect. This shows subjects, not counts.","Incorrect. The query is valid."
"Write SQL to list employee names in alphabetical order (A to Z).","SELECT Name FROM Employees ORDER BY Name;","SELECT Name FROM Employees SORT BY Name ASC;","SELECT Name FROM Employees ORDER BY Name ASC;","Both A and C","D","Correct. ORDER BY Name defaults to ascending order (alphabetical for strings).","Incorrect. Keyword is ORDER BY, not SORT BY.","Correct. Explicitly specifying ASC (ascending) also works and is clearer.","Correct. Both default ascending and explicit ASC achieve the same alphabetical sort."
"Given Sales(ID, Amount, SaleDate). Result of: SELECT SUM(Amount) FROM Sales WHERE SaleDate >= '2025-03-01' AND SaleDate < '2025-04-01'; (Assume Sales: (1, 100, '25-03-15'), (2, 200, '25-03-20'), (3, 150, '25-04-01'))?","100","200","300","450","C","Incorrect. Misses the second sale in March.","Incorrect. Misses the first sale in March.","Correct. Sums amounts for sales on or after March 1st AND *before* April 1st. 100 + 200 = 300. The sale on April 1st is excluded by '<'.","Incorrect. Includes the April 1st sale which is excluded by the condition."
"Write SQL to find the number of different cities represented in the 'Customers' table.","SELECT COUNT(City) FROM Customers;","SELECT SUM(City) FROM Customers;","SELECT COUNT(DISTINCT City) FROM Customers;","SELECT COUNT(*) FROM Customers GROUP BY City;","C","Incorrect. This counts all non-NULL city entries, including duplicates.","Incorrect. SUM() is for numeric values, not counting strings.","Correct. COUNT(DISTINCT City) counts only the unique city names.","Incorrect. This gives the count *per* city, not the count *of* unique cities."
"What does the SQL `TRUNCATE TABLE TableName;` command do?","Deletes the table structure.","Deletes all rows from the table very quickly, usually without logging individual row deletions.","Updates all rows in the table.","Selects a truncated subset of data.","B","Incorrect. That is `DROP TABLE TableName;`.","Correct. TRUNCATE is generally faster than DELETE FROM TableName (without a WHERE clause) as it often bypasses individual row processing and logging, but it cannot be easily rolled back and doesn't trigger DELETE triggers.","Incorrect. That is the UPDATE command.","Incorrect. TRUNCATE removes data, it doesn't select it."
"Write SQL to find employees whose names end with 'son'.","SELECT * FROM Employees WHERE Name LIKE '%son';","SELECT * FROM Employees WHERE Name ENDS WITH 'son';","SELECT * FROM Employees WHERE Name = '*son';","SELECT * FROM Employees WHERE Name LIKE '_son';","A","Correct. The '%' wildcard matches any sequence of characters, so '%son' matches names ending in 'son'.","Incorrect. 'ENDS WITH' is not standard SQL.","Incorrect. This matches the literal string '*son'.","Incorrect. The '_' wildcard matches exactly one character, so this would match names like ' Gson', 'Tson', etc. (4 characters total)."
"Given table Results(ID, Status). Data: (1, 'Pass'), (2, 'Fail'), (3, 'Pass'), (4, NULL). Result of: SELECT Status FROM Results UNION ALL SELECT Status FROM Results;?","('Pass'), ('Fail'), (NULL)","('Pass'), ('Fail'), ('Pass'), (NULL)","('Pass'), ('Fail'), ('Pass'), (NULL), ('Pass'), ('Fail'), ('Pass'), (NULL)","Error","C","Incorrect. This looks like the result of UNION (removing duplicates).","Incorrect. This looks like the original distinct values present.","Correct. UNION ALL concatenates the full results of both SELECT statements, including all duplicates and NULLs.","Incorrect. The query is valid."
"Write SQL to find the minimum salary for each department in the 'Employees' table.","SELECT DeptID, Salary FROM Employees WHERE Salary = MIN(Salary);","SELECT DeptID, MIN(Salary) FROM Employees GROUP BY DeptID;","SELECT DeptID, MIN(Salary) FROM Employees;","SELECT DeptID, MIN(Salary) GROUP BY DeptID FROM Employees;","B","Incorrect. Cannot use MIN() directly in WHERE clause this way.","Correct. Groups rows by DeptID and then applies the MIN() aggregate function to find the minimum salary within each group.","Incorrect. Requires GROUP BY DeptID to get the minimum *per* department. Without GROUP BY, MIN() finds the overall minimum salary.","Incorrect syntax. GROUP BY clause comes after FROM/WHERE."
"Given table `T` (ColA INT, ColB INT). Data: (1, 10), (2, 20), (NULL, 30), (1, 10). What is the result of `SELECT COUNT(DISTINCT ColA) FROM T;`?","1","2","3","4","B","Incorrect. Value '1' appears twice but is counted only once. NULL is not counted by COUNT(column).","Correct. The distinct non-NULL values for ColA are 1 and 2. COUNT(DISTINCT ColA) returns 2.","Incorrect. NULL is not counted by COUNT(ColA).","Incorrect. Doesn't count duplicates or NULL."
"Write the SQL to select names of employees who are in DeptID 10 OR DeptID 20.","SELECT Name FROM Employees WHERE DeptID = 10 AND DeptID = 20;","SELECT Name FROM Employees WHERE DeptID IN (10, 20);","SELECT Name FROM Employees WHERE DeptID = 10 OR WHERE DeptID = 20;","SELECT Name FROM Employees WHERE DeptID BETWEEN 10 AND 20;","B","Incorrect. AND requires both conditions to be true simultaneously, which is impossible for a single DeptID value.","Correct. The IN operator checks if the value is present in the provided list. This is equivalent to using OR.","Incorrect syntax. The second WHERE is wrong; use OR between conditions.","Incorrect. BETWEEN is inclusive and would include departments like 11, 12, etc., if they existed."
"What is a primary key in a relational database?","A unique identifier for a record in a table","Any column in a database table","A foreign key that references another table","A composite of all columns in a table","A","Correct! A primary key uniquely identifies each record in a table and cannot contain NULL values.","While columns are part of a table structure, not all columns serve as identifiers.","A foreign key references a primary key in another table, not defining unique records in the current table.","A primary key can be a single column or multiple columns (composite key), but never requires all columns."
"Which normal form eliminates transitive dependencies?","1NF","2NF","3NF","BCNF","C","1NF eliminates repeating groups but doesn't address transitive dependencies.","2NF eliminates partial dependencies but not transitive dependencies.","Correct! 3NF eliminates transitive dependencies where non-key attributes depend on other non-key attributes.","BCNF is stronger than 3NF and deals with functional dependencies where the determinant is not a superkey."
"What does SQL stand for?","Structured Query Language","System Query Language","Sequential Query Language","Standard Query Language","A","Correct! SQL stands for Structured Query Language, used for managing relational databases.","SQL is not an acronym for System Query Language.","SQL is not an acronym for Sequential Query Language.","While often considered standard, the official acronym is Structured Query Language."
"Which of the following is NOT a valid SQL join type?","INNER JOIN","LEFT JOIN","CENTER JOIN","CROSS JOIN","C","INNER JOIN returns rows when there is a match in both tables.","LEFT JOIN returns all rows from the left table and matched rows from the right table.","Correct! CENTER JOIN does not exist in standard SQL.","CROSS JOIN returns the Cartesian product of rows from both tables."
"In an ER diagram, what does a diamond shape represent?","Entity","Attribute","Relationship","Cardinality","C","Entities are typically represented by rectangles in ER diagrams.","Attributes are typically represented by ovals or ellipses in ER diagrams.","Correct! Diamond shapes represent relationships between entities in ER diagrams.","Cardinality is typically shown as text or symbols on the connecting lines, not as a separate shape."
"What is a foreign key?","A key used to link two tables together","The primary key of a table","A unique identifier for a table","A key that must contain unique values","A","Correct! A foreign key is a field that links to the primary key of another table.","A primary key uniquely identifies each record in its own table, not in other tables.","A unique identifier for a table would be its primary key, not a foreign key.","A foreign key can contain duplicate values and sometimes NULL values, unlike a primary key."
"Which SQL command is used to retrieve data from a database?","SELECT","INSERT","UPDATE","DELETE","A","Correct! SELECT is used to retrieve data from one or more tables.","INSERT is used to add new records to a table, not retrieve data.","UPDATE is used to modify existing records, not retrieve data.","DELETE is used to remove records from a table, not retrieve data."
"What does ACID stand for in database transactions?","Atomicity, Consistency, Isolation, Durability","Aggregate, Concurrent, Independent, Dynamic","Access, Control, Integrity, Data","Algorithm, Computation, Input, Data","A","Correct! ACID stands for Atomicity, Consistency, Isolation, and Durability, which are properties that guarantee reliable database transactions.","This is not the correct meaning of the ACID acronym in database contexts.","This is not the correct meaning of the ACID acronym in database contexts.","This is not the correct meaning of the ACID acronym in database contexts."
"What is denormalization in a database?","The process of adding redundancy to improve performance","The process of removing redundancy to eliminate anomalies","The process of creating indexes","The process of implementing transactions","A","Correct! Denormalization intentionally adds redundancy to improve read performance, often at the expense of write performance.","This describes normalization, not denormalization.","Creating indexes is a performance optimization technique but is not denormalization.","Implementing transactions relates to ACID properties, not denormalization."
"Which of the following is not a type of relationship in an ER model?","One-to-One","Many-to-Many","One-to-Many","Some-to-Some","D","One-to-One relationships exist where each entity in one entity set is related to at most one entity in another entity set.","Many-to-Many relationships exist where each entity in one entity set can be related to many entities in another and vice versa.","One-to-Many relationships exist where an entity in one entity set can be related to multiple entities in another.","Correct! 'Some-to-Some' is not a standard relationship type in ER modeling."
"What SQL clause is used to filter rows?","WHERE","HAVING","GROUP BY","ORDER BY","A","Correct! WHERE is used to filter rows before any groupings are made.","HAVING filters groups, not individual rows before grouping.","GROUP BY organizes rows into groups based on column values.","ORDER BY sorts the result set, it doesn't filter rows."
"What is a tuple in relation to databases?","A row in a table","A column in a table","A relationship between tables","A primary key","A","Correct! In relational database theory, a tuple corresponds to a row or record in a table.","A column in a table is referred to as an attribute or field.","A relationship between tables is established using keys, not referred to as a tuple.","A primary key is an attribute or set of attributes that uniquely identifies a tuple, not the tuple itself."
"Which of these is NOT a type of database key?","Natural key","Sequential key","Foreign key","Surrogate key","B","A natural key is a type of key that has meaning to users and is formed of real data attributes.","Correct! 'Sequential key' is not a standard database key type. You might be thinking of a sequence, which is a mechanism that generates sequential values.","A foreign key is a field that refers to the primary key in another table.","A surrogate key is an artificial key that has no meaning to users and is typically auto-generated."
"What is a database view?","A virtual table based on the result of a SQL statement","A physical representation of data stored on disk","A type of index for faster queries","A backup of a database","A","Correct! A view is a virtual table that doesn't store data itself but shows data from other tables based on a query.","Views are virtual and don't physically store data on disk.","Views are not indexes; they are query results presented as tables.","Views are not backups; they are virtual representations of query results."
"In SQL, what does JOIN without a prefix (e.g., INNER, LEFT) default to?","INNER JOIN","LEFT JOIN","RIGHT JOIN","FULL JOIN","A","Correct! A JOIN without a prefix defaults to INNER JOIN in SQL.","LEFT JOIN must be explicitly specified; it is not the default.","RIGHT JOIN must be explicitly specified; it is not the default.","FULL JOIN must be explicitly specified; it is not the default."
"What is a composite key?","A key that consists of two or more attributes","A key that uniquely identifies a record","A key that references another table","A key that allows NULL values","A","Correct! A composite key is made up of two or more columns to uniquely identify records.","While a composite key uniquely identifies a record, this definition applies to any primary key.","This describes a foreign key, not specifically a composite key.","Primary keys (including composite ones) cannot contain NULL values."
"Which SQL statement is used to create a new table?","CREATE TABLE","MAKE TABLE","GENERATE TABLE","NEW TABLE","A","Correct! CREATE TABLE is the standard SQL statement to create a new table.","MAKE TABLE is not a standard SQL statement.","GENERATE TABLE is not a standard SQL statement.","NEW TABLE is not a standard SQL statement."
"What does DDL stand for in SQL?","Data Definition Language","Data Manipulation Language","Database Management Language","Data Description Logic","A","Correct! DDL stands for Data Definition Language, which includes commands like CREATE, ALTER, and DROP.","DML stands for Data Manipulation Language, which includes commands like SELECT, INSERT, UPDATE, and DELETE.","There's no standard acronym DMgL in SQL.","There's no standard acronym DDL that stands for Data Description Logic."
"What is an index in a database?","A data structure that improves the speed of data retrieval","A constraint that ensures data integrity","A relationship between tables","A type of key that must be unique","A","Correct! An index is a data structure that improves query performance by allowing faster retrieval of rows.","Constraints ensure data integrity but are not specifically for improving retrieval speed.","Relationships are established through keys, not through indexes.","While an index can be unique, that's not its primary definition."
"What is a database transaction?","A unit of work performed against a database","A relationship between tables","A type of database constraint","A query that retrieves data","A","Correct! A transaction is a sequence of operations performed as a single logical unit of work.","A relationship shows how data in different tables is connected, not a sequence of operations.","A constraint enforces rules on data values, not a sequence of operations.","A query retrieves data but doesn't necessarily constitute a transaction."
"What is database normalization?","The process of organizing data to reduce redundancy","The process of adding redundancy for performance","The process of creating backup copies","The process of encrypting sensitive data","A","Correct! Normalization is the process of organizing data to reduce redundancy and improve data integrity.","Adding redundancy would be denormalization, not normalization.","Creating backups is important but not related to normalization.","Encryption is a security measure, not related to normalization."
"Which SQL command is used to modify existing records?","UPDATE","ALTER","MODIFY","CHANGE","A","Correct! UPDATE is used to modify existing records in a table.","ALTER is used to modify the structure of a table, not the data within it.","MODIFY is not a standard SQL command for updating records.","CHANGE is not a standard SQL command for updating records."
"What is a stored procedure?","A prepared SQL code that can be saved and reused","A constraint on data values","A type of database index","A backup method","A","Correct! A stored procedure is a prepared SQL code that can be saved and executed repeatedly.","A constraint enforces rules on data values but is not executable code.","An index improves query performance but is not executable code.","A stored procedure is not related to backup methods."
"Which normal form deals with multi-valued dependencies?","3NF","BCNF","4NF","5NF","C","3NF deals with transitive dependencies, not multi-valued dependencies.","BCNF deals with certain types of functional dependencies, not multi-valued dependencies.","Correct! 4NF addresses multi-valued dependencies, which occur when one attribute determines a set of values in another attribute.","5NF deals with join dependencies, not specifically multi-valued dependencies."
"What does SQL's GROUP BY clause do?","Groups rows that have the same values in specified columns","Filters groups based on a condition","Orders the result set","Joins tables together","A","Correct! GROUP BY groups rows with the same values in specified columns, typically for aggregate operations.","HAVING filters groups after they've been formed, not GROUP BY.","ORDER BY sorts the result set, not GROUP BY.","JOINs combine rows from different tables, not GROUP BY."
"What is a database trigger?","A procedural code that is automatically executed in response to certain events","A constraint that ensures data integrity","A special type of index","A method to optimize queries","A","Correct! A trigger is a procedural code that is automatically executed when specific events occur on a table.","While triggers can enforce constraints, that's not their definition.","Triggers are procedural code, not indexes.","Triggers can affect performance but are not primarily query optimization methods."
"Which of the following is NOT a valid aggregate function in SQL?","COUNT()","MEDIAN()","AVG()","MAX()","B","COUNT() is a valid SQL aggregate function that counts rows.","Correct! MEDIAN() is not a standard SQL aggregate function. You would typically use percentile functions or workarounds to find a median.","AVG() is a valid SQL aggregate function that calculates the average of values.","MAX() is a valid SQL aggregate function that finds the maximum value."
"What is a deadlock in database systems?","A situation where two transactions are waiting for each other to release locks","A constraint that prevents data modification","A failed query execution","A corrupted database file","A","Correct! A deadlock occurs when two or more transactions are waiting for each other, creating a cycle of dependencies.","Constraints enforce data rules but don't create waiting situations between transactions.","A failed query execution doesn't necessarily involve multiple transactions waiting for each other.","A corrupted database file is a data integrity issue, not related to transaction locks."
"What is referential integrity?","A rule that ensures relationships between tables remain consistent","A method to encrypt database connections","A type of database normalization","A technique to optimize queries","A","Correct! Referential integrity ensures that relationships between tables remain valid by preventing references that don't exist.","Encryption secures data but doesn't maintain relationship consistency.","Normalization organizes data efficiently but isn't specifically about maintaining relationships.","Query optimization improves performance but doesn't maintain relationship consistency."
"What does the SQL LIKE operator do?","Searches for a specified pattern in a column","Joins two tables with similar structures","Creates a copy of a table","Compares two values for equality","A","Correct! LIKE is used in a WHERE clause to search for a specified pattern in a column.","JOIN combines rows from tables based on related columns, not pattern matching.","Creating copies of tables requires different syntax, not the LIKE operator.","The equality operator (=) compares values, not LIKE."
"What is a candidate key?","A column or set of columns that could potentially become the primary key","Any foreign key in a table","A composite key consisting of all columns","A surrogate key generated by the system","A","Correct! A candidate key is a column or combination of columns that could uniquely identify records and potentially serve as the primary key.","Foreign keys reference primary keys in other tables; they are not candidate keys.","A composite key can be a candidate key, but not all composite keys involve all columns.","A surrogate key is artificially created, while candidate keys are based on the data's natural properties."
"What does the term 'projection' refer to in relational algebra?","Selecting specific columns from a relation","Filtering rows based on a condition","Joining two relations","Sorting a relation","A","Correct! Projection (π) in relational algebra selects certain columns while eliminating others.","Filtering rows based on a condition is called selection (σ), not projection.","Joining relations involves the join operators, not projection.","Sorting is not a fundamental operation in relational algebra."
"What is the difference between DELETE and TRUNCATE in SQL?","DELETE can use a WHERE clause while TRUNCATE cannot","TRUNCATE is faster but DELETE has more features","DELETE removes specific rows while TRUNCATE removes all rows","All of the above","D","This is correct, but incomplete. DELETE allows for conditional removal of rows.","This is correct, but incomplete. TRUNCATE is generally faster as it doesn't log individual row deletions.","This is correct, but incomplete. TRUNCATE always removes all rows.","Correct! All of these statements are true. DELETE can be conditional, TRUNCATE is faster, and TRUNCATE always removes all rows."
"In an ER diagram, what does a double rectangle represent?","Weak entity","Strong entity","Relationship","Attribute","A","Correct! A double rectangle represents a weak entity, which depends on another entity for its existence.","A strong entity is represented by a single rectangle.","A relationship is typically represented by a diamond.","An attribute is typically represented by an oval or ellipse."
"What is database sharding?","A technique that splits a large database into smaller, faster, more manageable parts","A backup strategy that creates multiple copies of data","A security method that encrypts portions of data","A normalization technique","A","Correct! Sharding horizontally partitions data across multiple databases to improve performance and scalability.","Sharding is not primarily about creating backup copies.","Sharding is about distribution for performance, not security or encryption.","Sharding is not related to normalization, which is about organizing data within a database."
"Which SQL statement is used to delete a table?","DROP TABLE","DELETE TABLE","REMOVE TABLE","TRUNCATE TABLE","A","Correct! DROP TABLE is used to completely remove a table structure and its data.","DELETE TABLE is not a standard SQL statement.","REMOVE TABLE is not a standard SQL statement.","TRUNCATE TABLE removes all data but preserves the table structure."
"What is an attribute in an ER model?","A property or characteristic of an entity","A relationship between entities","A constraint on data values","A primary key","A","Correct! An attribute is a property that describes or characterizes an entity.","A relationship connects entities but is not a property of a single entity.","Constraints enforce rules but are not characteristics of entities in the ER model.","A primary key is a specific type of attribute, not the definition of an attribute itself."
"What is a database schema?","The structure that represents the logical view of the entire database","The physical storage of data on disk","The process of normalizing data","A query that retrieves data","A","Correct! A schema defines the structure, including tables, fields, relationships, and constraints, that represents the logical organization of a database.","Physical storage relates to the implementation, not the logical structure.","Normalization is a process applied to a schema, not the schema itself.","Queries retrieve data based on a schema but are not the schema itself."
"Which of the following is NOT a type of SQL join?","INNER JOIN","OUTER JOIN","NATURAL JOIN","ARTIFICIAL JOIN","D","INNER JOIN returns rows when there is a match in both tables.","OUTER JOIN includes LEFT, RIGHT, and FULL OUTER JOINs, returning matched and unmatched rows.","NATURAL JOIN joins tables based on columns with the same name.","Correct! ARTIFICIAL JOIN is not a standard type of SQL join."
"What is a multivalued attribute in an ER model?","An attribute that can have multiple values for a single entity","An attribute that must have a value","An attribute that serves as a primary key","An attribute that references another entity","A","Correct! A multivalued attribute can have multiple values for a single entity instance, like phone numbers for a person.","A required attribute must have a value but doesn't necessarily have multiple values.","A primary key attribute uniquely identifies an entity but isn't defined by having multiple values.","A foreign key references another entity but isn't defined by having multiple values."
"What does BCNF stand for?","Boyce-Codd Normal Form","Basic Constraint Normal Form","Binary Coded Normal Form","Back-up Copy Normal Form","A","Correct! BCNF stands for Boyce-Codd Normal Form, named after Raymond F. Boyce and Edgar F. Codd.","This is not a standard term in database normalization.","This is not a standard term in database normalization.","This is not a standard term in database normalization."
"What is a derived attribute in an ER model?","An attribute whose value can be calculated from other attributes","A primary key attribute","A foreign key attribute","A multivalued attribute","A","Correct! A derived attribute's value can be calculated or derived from other attributes, like age from date of birth.","A primary key uniquely identifies an entity but isn't necessarily derived from other attributes.","A foreign key references another entity but isn't defined by being derived from other attributes.","A multivalued attribute can have multiple values but isn't defined by being derived."
"Which SQL clause is used to filter groups?","HAVING","WHERE","GROUP BY","ORDER BY","A","Correct! HAVING filters groups created by the GROUP BY clause.","WHERE filters rows before they are grouped.","GROUP BY organizes rows into groups but doesn't filter them.","ORDER BY sorts the result set but doesn't filter anything."
"What is a composite attribute in an ER model?","An attribute that can be divided into smaller subparts","A collection of attributes that form a primary key","An attribute that can have multiple values","An attribute that references another entity","A","Correct! A composite attribute can be divided into smaller, atomic parts, like a full name into first, middle, and last names.","A composite key combines multiple attributes for uniqueness, but that's not the definition of a composite attribute.","A multivalued attribute can have multiple values but isn't defined by being divisible.","A foreign key references another entity but isn't defined by being divisible."
"What is a NULL value in a database?","A marker indicating that data is unknown or not applicable","A value of zero","An empty string","A default value for all columns","A","Correct! NULL represents missing, unknown, or inapplicable data, not zero or empty.","Zero is a specific numeric value, not a representation of unknown data.","An empty string is a specific string value, not a representation of unknown data.","Default values can be anything defined by the database, not necessarily NULL."
"What does the SQL ORDER BY clause do?","Sorts the result set by specified columns","Filters rows based on a condition","Groups rows with the same values","Limits the number of returned rows","A","Correct! ORDER BY sorts the result set by one or more columns in ascending or descending order.","WHERE filters rows based on conditions, not ORDER BY.","GROUP BY groups rows with the same values, not ORDER BY.","LIMIT restricts the number of rows returned, not ORDER BY."
"Which SQL constraint ensures that every value in a column is unique?","UNIQUE","NOT NULL","PRIMARY KEY","FOREIGN KEY","A","Correct! The UNIQUE constraint ensures all values in a column are different.","NOT NULL ensures a column cannot have NULL values but doesn't require uniqueness.","PRIMARY KEY combines UNIQUE and NOT NULL but is more than just a uniqueness constraint.","FOREIGN KEY creates a link to a primary key in another table, not ensuring uniqueness."
"What is the purpose of the SQL UNION operator?","Combines the result sets of two or more SELECT statements","Performs an intersection of two result sets","Joins tables based on related columns","Filters rows from a table","A","Correct! UNION combines the results of two or more SELECT statements, removing duplicates.","INTERSECT returns only rows that appear in both result sets, not a combination.","JOIN combines rows from different tables based on related columns, not entire result sets.","WHERE filters rows based on conditions, not combining result sets."
"What is cardinality in a database relationship?","The numerical relationship between entity occurrences","The number of attributes in an entity","The number of tables in a database","The number of primary keys","A","Correct! Cardinality describes how many instances of one entity relate to instances of another entity (e.g., one-to-many).","The number of attributes in an entity is simply that, not cardinality.","The number of tables is a database metric, not a relationship property.","The number of primary keys is a table property, not a relationship property."
"What is a subquery in SQL?","A query nested inside another query","A query that returns a subset of a table","A query that uses the SUBSTR function","A query that uses a substitution variable","A","Correct! A subquery is a query nested within another query, often in the WHERE or FROM clause.","While a subquery can return a subset, that's not its definition.","A subquery has nothing to do with the SUBSTR string function.","Substitution variables are separate from the concept of subqueries."
"What is the purpose of an SQL alias?","To give a table or column a temporary, alternative name","To create a permanent view of a table","To encrypt column names for security","To set default values for columns","A","Correct! An alias gives a table or column a temporary name, making queries more readable or enabling self-joins.","Aliases are temporary for the duration of a query, not permanent views.","Aliases are for readability and functionality, not security or encryption.","Aliases rename tables or columns temporarily, not set default values."
"Which normal form eliminates partial dependencies?","1NF","2NF","3NF","BCNF","B","1NF eliminates repeating groups but doesn't address partial dependencies.","Correct! 2NF eliminates partial dependencies, where an attribute depends on only part of a composite primary key.","3NF eliminates transitive dependencies, building on 2NF.","BCNF is stronger than 3NF and addresses certain additional functional dependencies."
"What is a checkpoint in database systems?","A point at which the database system writes all in-memory data to disk","A constraint that validates data before insertion","A restore point for database recovery","A point where triggers are executed","A","Correct! A checkpoint is when all modified data in memory is written to disk, ensuring data durability.","Constraints validate data continuously, not at specific points.","While checkpoints can be used in recovery, they're not specifically restore points.","Triggers execute based on specific events, not at checkpoints."
"What does OLTP stand for?","Online Transaction Processing","Online Technical Processing","Online Table Processing","Offline Transaction Processing","A","Correct! OLTP stands for Online Transaction Processing, systems designed for transactional applications.","This is not a standard acronym in database terminology.","This is not a standard acronym in database terminology.","OLTP specifically refers to online, not offline, transaction processing."
"What does OLAP stand for?","Online Analytical Processing","Online Application Processing","Offline Analytical Processing","Online Access Protocol","A","Correct! OLAP stands for Online Analytical Processing, systems designed for complex analytical queries.","This is not a standard acronym in database terminology.","OLAP refers to online, not offline, analytical processing.","This is not a standard acronym in database terminology."
"What is a database cursor?","A pointer that allows traversal of the records in a result set","A graphical tool for database design","A constraint that restricts data values","A method to encrypt sensitive data","A","Correct! A cursor is a database object that enables traversal over the rows of a result set.","Database design tools may have cursors but that's not what a database cursor is.","Constraints enforce data rules but aren't related to result set traversal.","Encryption is a security measure, not related to result set traversal."
"What is a composite index?","An index on multiple columns","An index on a primary key","Any type of non-clustered index","An index created automatically by the system","A","Correct! A composite index is created on two or more columns of a table.","While primary keys are often indexed, that's not the definition of a composite index.","Non-clustered indexes can be on single or multiple columns; this doesn't define a composite index.","Automatically created indexes aren't necessarily on multiple columns."
"What is the difference between a clustered and non-clustered index?","A clustered index determines the physical order of data while non-clustered doesn't","A clustered index can only be created on primary keys","A non-clustered index cannot have duplicate values","A clustered index contains the actual data while non-clustered contains pointers","A","Correct! A clustered index determines the physical storage order of rows in a table, while a non-clustered index doesn't.","Clustered indexes are often on primary keys but can be on any column(s).","Non-clustered indexes can have duplicates unless specified as unique.","This is somewhat true but doesn't capture the key difference of physical ordering."
"What is data mining?","The process of discovering patterns in large data sets","A method to extract data from corrupted databases","The process of encrypting sensitive data","The process of backing up databases","A","Correct! Data mining involves discovering patterns, correlations, and insights from large datasets.","Data recovery might extract data from corrupted databases, but that's not data mining.","Encryption is a security measure, not related to pattern discovery.","Backing up is a maintenance operation, not related to pattern discovery."
"What is the purpose of the SQL DISTINCT keyword?","Eliminates duplicate rows from a result set","Filters rows based on a condition","Groups rows with the same values","Sorts the result set","A","Correct! DISTINCT ensures that only unique rows are returned in the result set.","WHERE filters rows based on conditions, not DISTINCT.","GROUP BY groups rows with the same values for aggregate operations, not DISTINCT.","ORDER BY sorts the result set, not DISTINCT."
"What is a stored function in a database?","A function that returns a single value and can be used in SQL statements","A procedure that doesn't return a value","A trigger that executes automatically","A view that simplifies complex queries","A","Correct! A stored function returns a single value and can be used in SQL expressions, unlike stored procedures.","Stored procedures can return values through parameters but don't directly return a value in expressions.","Triggers execute automatically in response to events but don't return values for use in expressions.","Views are virtual tables based on query results, not functions that return values."
"What is the difference between CHAR and VARCHAR data types?","CHAR is fixed-length while VARCHAR is variable-length","CHAR can only store characters while VARCHAR can store numbers","CHAR is for single characters while VARCHAR is for multiple characters","CHAR is faster while VARCHAR saves space","A","Correct! CHAR always uses the same amount of storage regardless of content, while VARCHAR uses only what's needed plus overhead.","Both can store any character data; neither stores numbers directly.","Both can store single or multiple characters.","This is somewhat true but doesn't capture the main fixed vs. variable length difference."
"What is the purpose of the SQL HAVING clause?","To filter groups based on a condition","To filter individual rows before grouping","To specify columns to group by","To specify columns to return","A","Correct! HAVING filters groups created by GROUP BY based on a condition.","WHERE filters individual rows before grouping.","GROUP BY specifies columns to group by, not HAVING.","SELECT specifies columns to return, not HAVING."
"What does DML stand for in SQL?","Data Manipulation Language","Data Management Logic","Database Modeling Language","Database Markup Language","A","Correct! DML stands for Data Manipulation Language, which includes commands like SELECT, INSERT, UPDATE, and DELETE.","This is not a standard acronym in SQL.","This is not a standard acronym in SQL.","This is not a standard acronym in SQL."
"What is a database lock?","A mechanism that controls concurrent access to data","A security feature that prevents unauthorized access","A constraint that enforces data integrity","A backup strategy","A","Correct! Locks prevent simultaneous access to data that could cause inconsistencies.","While locks contribute to security, they're primarily for controlling concurrent access.","Constraints enforce data rules but aren't the same as controlling concurrent access.","Locks aren't related to backup strategies."
"What is a SQL injection attack?","An attack that inserts malicious SQL code into application queries","A tool to optimize SQL query performance","A method to recover corrupted database files","A technique to create database backups","A","Correct! SQL injection attacks exploit vulnerabilities by inserting malicious SQL code that can manipulate the database.","Query optimization improves performance but isn't a security attack.","File recovery isn't a security attack.","Backup creation isn't a security attack."
"What is the purpose of the SQL GROUP BY clause?","To group rows that have the same values","To filter rows based on a condition","To sort the result set","To join tables together","A","Correct! GROUP BY groups rows with the same values in specified columns for aggregate operations.","WHERE filters rows based on conditions, not GROUP BY.","ORDER BY sorts the result set, not GROUP BY.","JOINs combine rows from different tables, not GROUP BY."
"What is the purpose of the SQL LIMIT clause?","To restrict the number of rows returned","To limit the number of columns returned","To limit the size of the database","To restrict user access to data","A","Correct! LIMIT restricts the number of rows returned by a query, useful for pagination.","Limiting columns is done through the SELECT clause, not LIMIT.","Database size limits are set through system configuration, not the LIMIT clause.","Access control is handled through permissions, not the LIMIT clause."
"What is the purpose of the SQL IN operator?","To check if a value matches any value in a list","To perform string pattern matching","To check if a value falls within a range","To check if a column contains NULL values","A","Correct! IN determines if a value matches any value in a specified list.","LIKE is used for string pattern matching, not IN.","BETWEEN checks if a value falls within a range, not IN.","IS NULL checks for NULL values, not IN."
"What is the purpose of the SQL BETWEEN operator?","To check if a value falls within a range","To check if a value matches any value in a list","To perform string pattern matching","To perform mathematical operations","A","Correct! BETWEEN checks if a value falls within a specified range (inclusive).","IN checks if a value matches any value in a list, not BETWEEN.","LIKE performs string pattern matching, not BETWEEN.","Mathematical operations use arithmetic operators, not BETWEEN."
"What is the purpose of the SQL EXISTS operator?","To check if a subquery returns any rows","To verify if a table exists in the database","To check if a column contains a specific value","To verify if a user exists","A","Correct! EXISTS checks if a subquery returns at least one row.","Information schema queries check if objects exist, not the EXISTS operator.","WHERE column = value checks if a column contains a specific value, not EXISTS.","User verification is done through system tables, not the EXISTS operator."
"What is a materialized view?","A physical copy of the result set of a query","A logical view that doesn't store data","A view that cannot be updated","A view with security restrictions","A","Correct! A materialized view physically stores the result of a query for faster access, unlike regular views.","Regular views are logical and don't store data; materialized views do.","Updatability isn't what defines a materialized view.","Access control is separate from whether a view is materialized."
"What is database replication?","The process of copying data from one database to others","The process of creating database backups","The process of optimizing queries","The process of recovering corrupted data","A","Correct! Replication copies and distributes data from one database server to others for redundancy and availability.","Backups create point-in-time copies, not continuous synchronization like replication.","Query optimization improves performance but isn't about data distribution.","Data recovery restores from backups, not about data distribution."
"What is a NoSQL database?","A database that doesn't use the relational model and often doesn't use SQL","A database that doesn't allow SQL queries","A database that has no structure","A database without security features","A","Correct! NoSQL databases use various data models beyond the relational model and often don't use SQL as their primary query language.","Many NoSQL databases can support SQL queries or similar functionalities, but that is not their defining characteristic.","NoSQL databases can have various structures depending on their type, such as document, key-value, column-family, or graph stores.","NoSQL databases can have security features, but their key distinction is their non-relational nature."
